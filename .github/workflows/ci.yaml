name: CI Pipeline

on:
  push:
    branches:
      - main
      - develop
      - release/*
      - hotfix/*
      - alpha

jobs:
  check-application:
    name: Check application
    runs-on: ubuntu-latest
    outputs:
      repo_name: ${{ env.REPO_NAME }}
    steps:
      - name: Start CI Pipeline
        id: get_repo_name
        run: |
          echo "REPO_NAME=$(echo "${{ github.repository }}" | sed 's/\//-/g')" >> $GITHUB_ENV
          echo "Starting CI pipeline to ${{env.REPO_NAME}} repository..."

      - name: Checkout code
        uses: actions/checkout@v4
        with:
          persist-credentials: false

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20.17.0"

      - name: Install dependencies
        run: npm install

      - name: Run lint
        run: npm run lint

      - name: Run tests
        run: npm run test

      # - name: Semantic Release
      #   id: release
      #   uses: cycjimmy/semantic-release-action@v4
      #   with:
      #     semantic_version: 21.1.1
      #   env:
      #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      # - name: Generate Docker Image URI
      #   id: generate_docker_uri
      #   run: |
      #     echo "docker_image_uri=${{ secrets.DOCKERHUB_USERNAME }}/${{ env.REPO_NAME }}:${{ steps.release.outputs.new_release_version }}" >> $GITHUB_ENV

      # - name: Login to Docker Hub
      #   uses: docker/login-action@v3
      #   with:
      #     username: ${{ secrets.DOCKERHUB_USERNAME }}
      #     password: ${{ secrets.DOCKERHUB_TOKEN }}

      # - name: Build and push
      #   uses: docker/build-push-action@v6
      #   with:
      #     push: true
      #     tags: ${{ env.docker_image_uri }}

  release-version:
    name: Release Version
    runs-on: ubuntu-latest
    needs: [check-application]
    outputs:
      new_release_version: ${{ steps.release.outputs.new_release_version }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          persist-credentials: false

      - name: Semantic Release
        id: release
        uses: cycjimmy/semantic-release-action@v4
        with:
          semantic_version: 21.1.1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  build-and-publish-image:
    name: Build and publish image
    runs-on: ubuntu-latest
    needs: [release-version]
    outputs:
      docker_image_uri: ${{ steps.generate_docker_uri.outputs.docker_image_uri }}
    steps:
      - name: Generate Docker Image URI
        id: generate_docker_uri
        run: |
          IMAGE_URI="${{ secrets.DOCKERHUB_USERNAME }}/${{ needs.check-application.outputs.repo_name }}:${{ needs.release-version.outputs.new_release_version }}"
          echo "docker_image_uri=$IMAGE_URI" >> $GITHUB_ENV
          echo "::set-output name=docker_image_uri::$IMAGE_URI"

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push
        uses: docker/build-push-action@v6
        with:
          push: true
          tags: ${{ env.docker_image_uri }}

  vulnerabilities-scan:
    name: Vulnerabilities scan
    needs: [build-and-publish-image]
    uses: comercialweber/github-workflows/.github/workflows/vulnerabilities-scan.yaml@main
    with:
      docker_image: ${{ needs.build-and-publish-image.outputs.docker_image_uri }}
